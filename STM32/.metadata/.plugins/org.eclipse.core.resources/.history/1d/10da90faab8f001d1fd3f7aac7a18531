/*
 * rtc.c
 *
 *  Created on: Jan 9, 2023
 *      Author: dell
 */
#include "rtc.h"

char time[10];
char date[10];

// RTC clock STM
RTC_HandleTypeDef hrtc;


/*---------------- Public functions -----------------------------------*/

// Set time if write backup register is invalid
void set_time(void) {
	  // Initialize RTC and set the Time and Date
	  rTime.Hours = 0x6;
	  rTime.Minutes = 0x0;
	  rTime.Seconds = 0x0;

	  if (HAL_RTC_SetTime(&hrtc, &rTime, RTC_FORMAT_BCD) != HAL_OK)
	  {
	    Error_Handler();
	  }
	  rDate.WeekDay = RTC_WEEKDAY_MONDAY;
	  rDate.Month = RTC_MONTH_JANUARY;
	  rDate.Date = 0x9;
	  rDate.Year = 0x23;

	  if (HAL_RTC_SetDate(&hrtc, &rDate, RTC_FORMAT_BCD) != HAL_OK)
	  {
	    Error_Handler();
	  }

	  HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x32F2);  			// Backup register
}

// Get time
void get_time(void)
{
	  // Get the RTC current Time
	  HAL_RTC_GetTime(&hrtc, &rTime, RTC_FORMAT_BIN);
	  // Get the RTC current Date
	  HAL_RTC_GetDate(&hrtc, &rDate, RTC_FORMAT_BIN);

	  // Display time Format: hh:mm:ss
	  sprintf((char*)time,"%02d:%02d:%02d", rTime.Hours, rTime.Minutes, rTime.Seconds);

	  // Display date Format: mm-dd-yy
	  // Year is between: 2000 -> 2099
	  sprintf((char*)date,"%02d-%02d-%2d", rDate.Date, rDate.Month, 2000 + rDate.Year);
}

// Display current date and time
void display_time(void)
{
	Lcd_cursor(&lcd, 0, 3);
	Lcd_string(&lcd, time);
	Lcd_cursor(&lcd, 1, 3);
	Lcd_string(&lcd, date);
}


